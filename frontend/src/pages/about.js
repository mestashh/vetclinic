import axios from 'axios';

export function initAbout() {
    const table = document.getElementById('petsTable');
    const addBtn = document.getElementById('addPetBtn');

    function showError(msg) {
        alert(msg);
        console.error(msg);
    }

    function attachPetEvents() {
        table.querySelectorAll('.delete-pet-btn').forEach(btn => {
            btn.onclick = () => {
                const row = btn.closest('tr');
                const id = row.dataset.id;
                if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞?')) return;
                axios.delete(`/api/animals/${id}`)
                    .then(() => {
                        console.log(`–ü–∏—Ç–æ–º–µ—Ü —Å id=${id} —É–¥–∞–ª—ë–Ω.`);
                        loadPets();
                    })
                    .catch((err) => showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–∏—Ç–æ–º—Ü–∞', err));
            };
        });

        table.querySelectorAll('.edit-pet-btn').forEach(btn => {
            btn.onclick = () => {
                const row = btn.closest('tr');
                const id = row.dataset.id;
                console.log(`–ù–∞—á–∏–Ω–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∏—Ç–æ–º—Ü–∞ id=${id}`);

                const inputs = row.querySelectorAll('input');
                inputs.forEach(i => i.disabled = false);

                const btnContainer = row.querySelector('.pet-buttons');
                btnContainer.innerHTML = `
                    <button class="confirm-pet-btn icon-button icon-edit">‚úÖ</button>
                    <button class="cancel-pet-btn icon-button icon-delete">‚ùå</button>
                `;

                btnContainer.querySelector('.confirm-pet-btn').onclick = () => {
                    const updatedInputs = row.querySelectorAll('input');
                    const updatedData = {
                        name: updatedInputs[0].value,
                        species: updatedInputs[1].value,
                        breed: updatedInputs[2].value,
                        age: updatedInputs[3].value,
                    };

                    console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º PUT-–∑–∞–ø—Ä–æ—Å —Å –¥–∞–Ω–Ω—ã–º–∏:', updatedData, `–Ω–∞ /api/animals/${id}`);

                    axios.put(`/api/animals/${id}`, updatedData)
                        .then((response) => {
                            console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.data);
                            loadPets();
                        })
                        .catch((err) => showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∏—Ç–æ–º—Ü–∞', err));
                };

                btnContainer.querySelector('.cancel-pet-btn').onclick = () => {
                    console.log(`–û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∏—Ç–æ–º—Ü–∞ id=${id}`);
                    loadPets();
                };
            };
        });
    }

    function loadPets() {
        axios.get('/api/animals', { params: { t: Date.now() } })
            .then(({ data }) => {
                const pets = data.data || [];
                const myPets = pets.filter(p => Number(p.client_id) === Number(window.currentUserId));

                const html = myPets.map(p => `
                <tr data-id="${p.id}">
                    <td><input disabled value="${p.name}" class="pet-input w-full border-none"/></td>
                    <td><input disabled value="${p.species}" class="pet-input w-full border-none"/></td>
                    <td><input disabled value="${p.breed || ''}" class="pet-input w-full border-none"/></td>
                    <td><input disabled value="${p.age || ''}" class="pet-input w-full border-none"/></td>
                    <td>
                        <div class="pet-buttons">
                            <button class="edit-pet-btn icon-button icon-edit">‚úèÔ∏è</button>
                            <button class="delete-pet-btn icon-button icon-delete">üóëÔ∏è</button>
                        </div>
                    </td>
                </tr>
            `).join('');

                table.querySelector('tbody').innerHTML = html;
                attachPetEvents();
            })
            .catch((err) => showError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–∏—Ç–æ–º—Ü–µ–≤', err));
    }


    if (addBtn) {
        addBtn.onclick = () => {
            const tr = document.createElement('tr');
            tr.className = 'bg-gray-100 border-b';
            tr.innerHTML = `
                <td><input placeholder="–ö–ª–∏—á–∫–∞" class="new-pet-input w-full" /></td>
                <td><input placeholder="–í–∏–¥" class="new-pet-input w-full" /></td>
                <td><input placeholder="–ü–æ—Ä–æ–¥–∞" class="new-pet-input w-full" /></td>
                <td><input placeholder="–í–æ–∑—Ä–∞—Å—Ç" type="number" min="0" class="new-pet-input w-full" /></td>
                <td>
                    <div class="pet-buttons">
                        <button class="save-pet-btn icon-button icon-edit">‚úÖ</button>
                        <button class="cancel-pet-btn icon-button icon-delete">‚ùå</button>
                    </div>
                </td>
            `;
            table.querySelector('tbody').prepend(tr);

            tr.querySelector('.save-pet-btn').onclick = () => {
                const [name, species, breed, age] = Array.from(tr.querySelectorAll('.new-pet-input')).map(i => i.value);
                console.log('–î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞:', { name, species, breed, age });

                axios.post('/api/animals', {
                    name, species, breed, age,
                    client_id: window.currentUserId
                })
                    .then(() => loadPets())
                    .catch((err) => showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∏—Ç–æ–º—Ü–∞', err));
            };

            tr.querySelector('.cancel-pet-btn').onclick = () => {
                console.log('–û—Ç–º–µ–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–∏—Ç–æ–º—Ü–∞.');
                tr.remove();
            };
        };
    }

    loadPets();
}
